<?php
/**
 * User: 周星
 * Date: 2019/6/20
 * Time: 17:58
 * Email: zhouxing@benbang.com
 */

namespace app\api\controller;

use util\ErrorCode;
use util\ReqResp;

// 商品相关
class Product extends UnLoginBase {

    public function initialize () {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    // 商品列表
    public function getProductList () {
        try {
            $cateId = input('cate_id', null);
            list($pageNum, $pageSize) = getPageParams();

            $where = array_merge(cateBaseWhere('cate'), productBaseWhere('pro'));

            if ($cateId) {
                $where[] = ['pro.cate_id', '=', $cateId];
            }

            $field = [
                'pro.product_title', 'pro.product_code', 'pro.cate_id', 'pro.product_price',
                'pro.product_cover_img', 'cate.cate_title', 'cate.cate_icon'
            ];

            $data = app()->model('common/Product')->alias('pro')->field($field)->append([
                'product_cover_img_url'
            ])->where($where)->join([
                ['cate cate', 'pro.cate_id = cate.cate_id'],
            ])->order([
                'pro.product_sort' => 'desc',
                'product_create_time' => 'desc'
            ])->paginate($pageSize, false, [
                'page' => $pageNum
            ])->toArray();

            // if (!$data) {
            //     throw new \Exception('无数据', ErrorCode::NO_DATA);
            // }

            ReqResp::outputSuccess(handleApiReturn($data));
        } catch (\Exception $e) {
            ReqResp::outputFail($e);
        }
    }

    // 商品详情
    public function getProductInfo () {
        try {
            $code = input('product_code', null);
            if (!$code) {
                throw new \Exception('参数错误', ErrorCode::PARAMS_ERROR);
            }

            $where = array_merge([
                ['pro.product_code', '=', $code],
            ], productBaseWhere('pro'), cateBaseWhere('cate'));

            $field = [
                'pro.product_title', 'pro.product_code', 'pro.cate_id', 'pro.product_price',
                'pro.product_cover_img', 'pro.product_description', 'pro.product_attribute', 'pro.product_on_sale',
                'pro.product_preview_img', 'pro.product_detail_img', 'pro.product_is_vip_exclusive',
                'pro.product_sales', 'pro.product_stock', 'cate.cate_title', 'cate.cate_icon',
            ];

            $data = app()->model('common/Product')->alias('pro')->field($field)->append([
                'product_cover_img_url', 'product_preview_img_url','product_detail_img_url',
            ])->where($where)->join([
                ['cate cate', 'pro.cate_id = cate.cate_id'],
            ])->order([
                'pro.product_sort' => 'desc',
            ])->find();

            if (!$data) {
                throw new \Exception('商品不存在或已下架', ErrorCode::NO_DATA);
            }

            ReqResp::outputSuccess(handleItemImg($data->toArray()));
        } catch (\Exception $e) {
            ReqResp::outputFail($e);
        }
    }
}