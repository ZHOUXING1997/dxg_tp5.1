<?php
/**
 * User: 周星
 * Date: 2019/6/20
 * Time: 18:19
 * Email: zhouxing@benbang.com
 */

namespace app\api\controller;

use util\ErrorCode;
use util\ReqResp;

// 活动相关
class Activity extends UnLoginBase {

    public function initialize () {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    // 活动详情
    public function getActivityInfo () {
        try {
            $actId = input('activity_id', null);
            if (!$actId) {
                throw new \Exception('参数错误', ErrorCode::PARAMS_ERROR);
            }

            $field = [
                'activity_id', 'activity_type', 'activity_name', 'activity_cover_img', 'activity_start_time',
                'activity_end_time', 'activity_discount', 'activity_note', 'activity_limit_num',
                'activity_already_paid_num', 'activity_url', 'product_id', 'cate_id',
            ];

            $where = [
                ['activity_id', '=', $actId],
            ];

            $data = app()->model('common/Activity')->field($field)->append([
                'activity_cover_img_url'
            ])->where($where)->find();

            // if (!$data) {
            //     throw new \Exception('活动不存在', ErrorCode::NO_DATA);
            // }

            $data = $this->activityInfo($data);

            ReqResp::outputSuccess($data);
        } catch (\Exception $e) {
            ReqResp::outputFail($e);
        }
    }

    private function activityInfo ($data) {
        // 根据不同类型查询关联信息
        if ($data['activity_type'] == config('activity_type_extension')) {
            return $data;
        }

        if ($data['activity_type'] == config('activity_type_product')) {
            // 查询商品
            $info = app()->model('common/Product')->alias('pro')->field([
                'pro.product_title', 'pro.product_code', 'pro.cate_id', 'pro.product_price',
                'pro.product_cover_img', 'pro.product_description', 'pro.product_is_vip_exclusive',
                'pro.product_sales', 'pro.product_stock', 'cate.cate_title',
            ])->append([
                'product_cover_img_url'
            ])->where(array_merge([
                ['pro.product_id', 'in', $data['product_id']],
            ], productBaseWhere('pro')))->join([
                ['cate cate', 'pro.cate_id = cate.cate_id'],
            ])->order([
                'pro.product_sort' => 'desc',
            ])->select()->toArray();

            $data['product_info'] = handleItemImg($info);
            unset($data['activity_url']);
        } else if ($data['activity_type'] == config('activity_type_cate')) {
            // 查询分类
            // 查询显示且未删除的分类及图标
            $info = app()->model('common/Cate')->field([
                'cate_id', 'cate_title', 'cate_icon', 'cate_description',
            ])->append([
                'cate_icon_url',
            ])->where(array_merge([
                'cate_id' => $data['cate_id']
            ], cateBaseWhere(null, false)))->order([
                'cate_sort' => 'desc',
            ])->select()->toArray();

            $data['cate_info'] = handleItemImg($info);
            unset($data['activity_url']);
        }

        unset($data['product_id']);
        unset($data['cate_id']);

        return $data;
    }
}