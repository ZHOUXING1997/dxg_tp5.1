<?php
/**
 * User: 周星
 * Date: 2019/4/12
 * Time: 12:00
 * Email: zhouxing@benbang.com
 */

namespace app\manage\controller;

use app\common\controller\AdminBase;
use app\common\model\CommonModel;
use util\ErrorCode;
use util\ReqResp;
use util\Pay;

// 用户管理
class Member extends AdminBase {
    
    public function initialize () {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index () {
        return $this->fetch();
    }

    public function getList () {
        try {
            // 参数
            $nextOffset = input('page/d', 0);
            $pageSize = input('limit/d', config('page_size'));
            $search = $this->search();
            
            $join = [
                ['user u', 'user.user_superior_id = u.user_id', 'left'],
            ];
            $field = [
                'user_id',
                'user_nickname',
                'user_avatar',
                'user_email',
                'user_vip_num',
                'user_sex',
                'user_note',
                'user_consume_total_fee',
                'user_status',
                'user_last_login_time',
                'user_login_times',
                'user_create_time',
                'u.user_nickname' => 'superior_nickname',
                'u.user_avatar' => 'superior_avatar',
            ];
            $group = [];
            $order = ['user_id' => 'desc'];
            $appends = [
                'user_sex_title',
                'user_status_title'
            ];

            $data = app()->model('commonModel')->getList([
                'table' => \app\common\model\User::class,
                'pk' => 'user_id',
                'as' => 'user',
            ], $field, $nextOffset, $pageSize, true, function (&$item) {
                return $item;
            }, $search['where'], $search['whereOr'], $join, $order, $group, $appends)->toArray();
            
            $req = [
                'total' => $data['total'],
                'data' => $data['data'],
            ];
            ReqResp::outputSuccess($req);
        } catch (\Exception $e) {
            ReqResp::outputFail($e);
        }
    }

    public function viewEdit () {
        try {
            $params = input('post.', null);
            if (!$params) {
                throw new \Exception('无修改', ErrorCode::PARAMS_ERROR);
            }

            $rule = [
                'user_note' => ['user_note|备注' => 'require|length:1,30',],
            ];
            $checkRule = [];
            foreach ($params as $k => $v) {
                if (isset($rule[$k])) {
                    $checkRule = $rule[$k];
                }
            }
            // 数据验证
            $result = $this->validate($params,$checkRule);
            if(true !== $result){
                throw new \Exception($result, ErrorCode::SUBMIT_PARAMS_VALIDATE_ERROR);
            }

            $res = app()->model('User')->allowField(true)->saveData($params, ['user_id' => $params['user_id']]);
            if ($res) {
                ReqResp::outputSuccess([], '修改成功');
            }
            throw new \Exception('修改失败');
        } catch (\Exception $e) {
            ReqResp::outputFail($e);
        }
    }
    
    // 查询方法
    protected function search () {
        // dump(input(''));die;

        $search = input('search', null);
        $startTime = input('start', '');
        $endtime = input('end', '');
        $where = [];
        $whereOr = [];
        $formget = [];
        if ($search) {
            $where[] = ['user_nickname', 'like','%' . $search . '%'];
            $formget['search'] = $search;
        } else {
            $formget['search'] = '';
        }

        if (!empty($startTime)) {
            // $start = strtotime($startTime);
            $where[] = ['user_create_time', '>',$startTime];
            $formget['start_time'] = $startTime;
        } else {
            $formget['start_time'] = '';
        }
        if (!empty($endtime)) {
            // $end = strtotime($endtime);
            $where[] = ['user_create_time', '<',$endtime];
            $formget['end_time'] = $endtime;
        } else {
            $formget['end_time'] = '';
        }
        if (!empty($startTime) && !empty($endtime)) {
            // $start = strtotime($startTime);
            // $end = strtotime($endtime);
            if ($startTime < $endtime) {
                $where[] = ['user_create_time','between',[$startTime,$endtime]];
            } else {
                $where[] = ['user_create_time','between',[$endtime,$startTime]];
            }
        }

        $search = [
            'where' => $where,
            'whereOr' => $whereOr,
            'formget' => $formget,
        ];
        return $search;
    }
}